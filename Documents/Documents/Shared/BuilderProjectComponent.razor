@using Documents.Data
@using Documents.Services

@inject UserService UserServ
@inject FileSystemService FSServ

<EditForm Model="_project">
	<h4 align="center" class="mb-2">Документы</h4>
	<table class="table mt-4">
	  <thead>
		<tr>
		  <th scope="col">Название документа</th>
		  <th scope="col">Название файла</th>
		  <th scope="col">Загрузка</th>
		  <th scope="col">Обязательный</th>
		  <th scope="col">Утвержден</th>
		</tr> 
	  </thead>
	  <tbody>
			@foreach(var doc in _project.BuilderDocumentInfos)
			{
				<tr>
					<td>@doc.Name</td>
					<td>@doc.FileName</td>
					<td><InputFile OnChange="(e) => FSServ.LoadFile(e, doc)" class="d-flex justify-content-center align-self-center"></InputFile></td>
					<td>@(doc.IsImportant ? "Да" : "Нет")</td>
					<td>@(doc.IsAccepted ? "Да" : "Нет")</td>		
				</tr>
			}
	  </tbody>
	</table>
</EditForm>

@code {
	[Parameter]
	public Project Project { get; set; }

	[Parameter]
	public EventCallback<Project> SendProject { get; set; }

	private Project _project;

	protected override void OnInitialized()
	{
		if (Project != null)
		{
			_project = Project;
			return;
		}
		_project = new Project();
	}

	private void SendProjectInfo()
	{
		SendProject.InvokeAsync(_project);
	}
}
