@page "/reg"
@using Data
@using Services
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@inject CurrentUsersRole CurrentUsersRole
@inject CurrentUser CurrentUser
<PageTitle>Index</PageTitle>

<h1>Hello</h1>

<div class="card">
    <h4 class="card-header">Registration Page</h4>
    <div class="card-body">
        <hr>
            <label for="email"><b>Email</b></label>
            <input type="text" placeholder="Enter Email" name="email" id="email" required @bind-value="email" />
            <br/>
            <label for="login"><b>Login</b></label>
            <input type="text" placeholder="Enter Login" name="login" id="login" required @bind-value="login" />
            <br/>
            <label for="psw"><b>Password</b></label>
            <input type="password" placeholder="Enter Password" name="psw" id="psw" required @bind-value="password" />
            <br/>
            <label for="psw-repeat"><b>Repeat Password</b></label>
            <input type="password" placeholder="Enter Password" name="psw" id="psw" required @bind-value="repPassword" />
        <hr>
        <button type="submit" class="registerbtn" @onclick="Registrarion">Registration</button>
        <button type="submit" class="registerbtn" @onclick="Login">To Login</button>
    </div>
</div>

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    string login;
    string password;
    string email;
    string repPassword;

    private async void Registrarion()
    {
        if (password == repPassword)
        {
            switch (CurrentUsersRole.UserRole)
            {
                case "Customer":
                    Customer customer = new Customer();
                    customer.Login = login;
                    customer.Password = password;
                    customer.Email = email;
                    CurrentUser.CurrentU = customer;
                    DBConnection.AddToDataBase(customer);
                    await LocalStorage.SetAsync<User>("Autho", customer);
                    break;
                case "Designer":
                    Designer designer = new Designer();
                    designer.Login = login;
                    designer.Password = password;
                    designer.Email = email;
                    CurrentUser.CurrentU = designer;
                    DBConnection.AddToDataBase(designer);
                    await LocalStorage.SetAsync<User>("Autho", designer);
                    break;
                case "Developer":
                    Developer developer = new Developer();
                    developer.Login = login;
                    developer.Password = password;
                    developer.Email = email;
                    CurrentUser.CurrentU = developer;
                    DBConnection.AddToDataBase(developer);
                    await LocalStorage.SetAsync<User>("Autho", developer);
                    break;
            }
            StateHasChanged();
            Navigation.NavigateTo("/personal"); 
        }
    } 

    private void Login() 
	{ 
		Navigation.NavigateTo("/autho"); 
	} 
}