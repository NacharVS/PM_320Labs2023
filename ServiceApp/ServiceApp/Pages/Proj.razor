@page "/proj"
@using Data
@using Services
@inject NavigationManager Navigation
@inject CurrentUsersRole CurrentUser
@inject CurrentUser CurrentUserName
@inject CurrentProject CurrentProj
@inject FileSystemService FileSyS
@inject ILocalStorageService LocalStorage
@inject IJSRuntime JS

<PageTitle>Index</PageTitle>


<div class="card">
    <h4 class="card-header" Color = "black">Personal Page</h4>
    <div class="card-body">
        <hr>
            <p>Наименование:  @CurrentProj.Project.Name</p>
            <p>Отрасль:  @CurrentProj.Project.Department</p>
            <p>Заказчик: @CurrentProj.Project.Customer</p>
            <p>Проектировщик:  @CurrentProj.Project.Designer</p>
            <p>Застройщик: @CurrentProj.Project.Developer</p>
        <hr>
        <h6>Необходимые документы</h6>
        <table class="table">
            <thead>
                <tr>
                    <th>Наименование документа</th>
                    <th>В первую очередь</th>
                </tr>
            </thead>
            <tbody>
                @switch (@CurrentProj.Project.Department)
                {
                    case "Водоснабжение":
                        @foreach (var doc in CurrentProj.Project.DocsPreor)
                        {
                            <tr>
                                <td>@doc.Key</td>
                                <td>
                                     <input type="checkbox" checked = "@doc.Value" disabled="disabled"><label></label>
                                </td>
                            </tr>
                        }
                    break;
                    case "Газификация":
                        @foreach (var doc in CurrentProj.Project.DocsPreor)
                        {
                            <tr>
                                <td>@doc.Key</td>
                                <td>
                                     <input type="checkbox" checked = "@doc.Value" disabled="disabled"><label></label>
                                </td>
                            </tr>
                        }
                    break;
                }
            </tbody>
        </table>
        @if (CurrentUser.UserRole != "Developer")
        {
            <h6>Документы, предоставленные проектировщиком</h6>
            @if (CurrentUser.UserRole == "Designer")
            {
                <InputFile OnChange="@LoadFiles" multiple  />
                <br />
            }
            @if (CurrentProj.Project.LoadedFilesDes is not null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Наименование документа</th>
                            <th>Наименование документа</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var file in CurrentProj.Project.LoadedFilesDes)
                        {
                            <tr>
                                <td><b>@file</b></td>
                                <td> 
                                    <a href="/files/@file">Просмотреть файл и скачать</a>
                                </td>
                            </tr>
                        }
                        @if (filesDes is not null)
                        {
                            @foreach (var file in filesDes)
                            {
                                <tr>
                                    <td><b>@file</b></td>
                                    <td> 
                                        <a href="/files/@file">Просмотреть файл и скачать</a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
            @if (CurrentUser.UserRole == "Customer")
            {
                <label for="comForDes"><b>Комментарий</b></label>                    
                <input type="text" placeholder="Комментарий" name="comForDes" id="comForDes" required @bind-value="comForDes" />
                <br/>
            }
            else
            {
                <label for="comForDes"><b>Комментарий</b></label> 
                <br/>
                <h5>@CurrentProj.Project.CommentForDes</h5>
            }
        }
        @if (CurrentUser.UserRole != "Designer")
        {
            <h6>Документы, предоставленные застройщиком</h6>
            @if (CurrentUser.UserRole == "Developer")
            {
                <InputFile OnChange="@LoadFilesByDeveloper" multiple  />
                <br />
            }
            @if (CurrentProj.Project.LoadedFilesDev is not null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Наименование документа</th>
                            <th>Наименование документа</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var file in CurrentProj.Project.LoadedFilesDev)
                        {
                            <tr>
                                <td><b>@file</b></td>
                                <td>
                                    <a href="/files/@file">Просмотреть файл и скачать</a>
                                </td>
                            </tr>
                        }
                        @if (filesDev is not null)
                        {
                            @foreach (var file in filesDev)
                            {
                                <tr>
                                    <td><b>@file</b></td>
                                    <td>
                                        <a href="/files/@file">Просмотреть файл и скачать</a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
            @if (CurrentUser.UserRole == "Customer")
            {
                <label for="comForDes"><b>Комментарий</b></label>                    
                <input type="text" placeholder="Комментарий" name="comForDes" id="comForDes" required @bind-value="comForDev" />
                <br/>
            }
            else
            {
                <label for="comForDes"><b>Комментарий</b></label> 
                <br/>
                <h5>@CurrentProj.Project.CommentForDev</h5>
            }
        }
        <br />
        @if (CurrentUser.UserRole == "Customer")
        {
            <button type="submit" class="registerbtn" @onclick="Aprroved">Утвердить</button>
        }
    </div>
</div>

<button type="submit" class="registerbtn" @onclick="Save">Сохранить</button>
<button class = "registerbtn"  @onclick="Logouting">Выйти</button>
<button class = "registerbtn" @onclick="GoToProfile">Профиль</button>

@code {
    List<IBrowserFile> _loadedFilesDev = new();
    List<IBrowserFile> _loadedFilesDes = new();
    List<string>? filesDes = new();
    List<string>? filesDev = new();
    string comForDes;
    string comForDev;


    private void Logouting()
    {
        CurrentUserName.CurrentCustomer = null;
        CurrentUserName.CurrentDesigner = null;
        CurrentUserName.CurrentDeveloper = null;
        LocalStorage.RemoveAsync("Autho");
        LocalStorage.RemoveAsync("string");
        Navigation.NavigateTo("/");
        StateHasChanged();
    }

    public void GoToProfile()
    {
        Navigation.NavigateTo("/personalmain");
    }

    public void Aprroved()
    {
        switch (CurrentProj.Project.Department)
        {
            case "Водоснабжение" :
                foreach (var file in filesDes)
                {
                    CurrentProj.Project.LoadedFilesDes.Add(file);
                }
                foreach (var file in filesDev)
                {
                    CurrentProj.Project.LoadedFilesDev.Add(file);
                }
                CurrentProj.Project.CommentForDes = comForDes;
                CurrentProj.Project.CommentForDev = comForDev;
                CurrentProj.Project.IsApproved = true;
                DBConnection.ReplaceWater(CurrentProj.Project);
                break;
            case "Газификация" :
                foreach (var file in filesDes)
                {
                    CurrentProj.Project.LoadedFilesDes.Add(file);
                }
                foreach (var file in filesDev)
                {
                    CurrentProj.Project.LoadedFilesDev.Add(file);
                }
                CurrentProj.Project.CommentForDes = comForDes;
                CurrentProj.Project.CommentForDev = comForDev;
                CurrentProj.Project.IsApproved = true;
                DBConnection.ReplaceGas(CurrentProj.Project);
                break;
        }
        filesDes = null;
        filesDev = null;
        Navigation.NavigateTo("/personalmain");
    }

    public void Save()
    {
        switch (CurrentProj.Project.Department)
        {
            case "Водоснабжение" :
                foreach (var file in filesDes)
                {
                    CurrentProj.Project.LoadedFilesDes.Add(file);
                }
                foreach (var file in filesDev)
                {
                    CurrentProj.Project.LoadedFilesDev.Add(file);
                }
                CurrentProj.Project.CommentForDes = comForDes;
                CurrentProj.Project.CommentForDev = comForDev;
                DBConnection.ReplaceWater(CurrentProj.Project);
                break;
            case "Газификация" :
                foreach (var file in filesDes)
                {
                    CurrentProj.Project.LoadedFilesDes.Add(file);
                }
                foreach (var file in filesDev)
                {
                    CurrentProj.Project.LoadedFilesDev.Add(file);
                }
                CurrentProj.Project.CommentForDes = comForDes;
                CurrentProj.Project.CommentForDev = comForDev;
                DBConnection.ReplaceGas(CurrentProj.Project);
                break;
        }
        filesDes = null;
        filesDev = null;
        Navigation.NavigateTo("/personalmain");
    }

    public void Ok()
    {
        Navigation.NavigateTo("/personalmain");
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        _loadedFilesDes.Clear();

        foreach (var file in e.GetMultipleFiles(e.FileCount))
        {
            _loadedFilesDes.Add(file);
            filesDes.Add(file.Name);
            Stream stream = file.OpenReadStream();
            await FileSyS.UploadFileToDb(stream, file.Name);
            FileSyS.DownloadFileToProject(file);
            stream.Dispose();
        }
    }


    private async Task LoadFilesByDeveloper(InputFileChangeEventArgs e)
    {
        _loadedFilesDev.Clear();

        foreach (var file in e.GetMultipleFiles(e.FileCount))
        {
            _loadedFilesDev.Add(file);
            filesDev.Add(file.Name);
            Stream stream = file.OpenReadStream();
            await FileSyS.UploadFileToDb(stream, file.Name);
            FileSyS.DownloadFileToProject(file);
            stream.Dispose();
        }
    }
}

<style>
    .card-header {
        background-color :rgba(0,0,0,0.4);
    }
</style>