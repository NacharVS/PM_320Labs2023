@page "/authorization"

<PageTitle>Authorization</PageTitle>

@using ServiceApp.Data
@using ServiceApp.Services
@using System.Diagnostics
@inject DataBase dataBase
@inject IJSRuntime JS
@inject ILocalStorageService localStorageService
@inject NavigationManager novigation

<div class="card">
    <h1 class="card-header">Authorization</h1>
    <div class="card-body">
        <EditForm Model="@user" OnValidSubmit="@LogIn" class="mx-1 mx-md-4">
            <label>Role:</label><br/>
            <input type="text" id="Role" @bind-value="@user.WorkerRole"/><br/>
            <label>Login:</label><br/>
            <input type="text" id="Login" @bind-value="@user.Login"/><br/>
            <label>Password:</label><br/>
            <input type="password" id="Password" @bind-value="@user.Password"/><br/><br/>

            <input type="submit" class="btn btn-primary btn-lg" value="Log In"/>

            @*@if (dataBase.CurrentUser is not null)
            {
                <p>Role: @dataBase.CurrentUser?.WorkerRole</p>
                <p>Surname: @dataBase.CurrentUser?.Surname</p>
                <p>Name: @dataBase.CurrentUser?.Name</p>
                <p>Patronymic: @dataBase.CurrentUser?.Patronymic</p>
            }*@
        </EditForm>
    </div>
</div>

@code {
    private Worker user = new Worker();

    public void LogIn()
    {
        if (user.Login != null && user.Password != null)
        {
            switch (user.WorkerRole)
            {
                case "Customer":
                    dataBase.CurrentUser = dataBase.FindByCustomerLogin(user.Login);
                    dataBase.CurrentCustomer = (Customer)dataBase.CurrentUser;
                    novigation.NavigateTo("/customer");
                    break;
                case "Designer":
                    dataBase.CurrentUser = dataBase.FindByDesignLogin(user.Login);
                    dataBase.CurrentDesigner = (Designer)dataBase.CurrentUser;
                    novigation.NavigateTo("/designer");
                    break;
                case "Developer":
                    dataBase.CurrentUser = dataBase.FindByDeveloperLogin(user.Login);
                    dataBase.CurrentDeveloper = (Developer)dataBase.CurrentUser;
                    novigation.NavigateTo("/developer");
                    break;
            }

            if (dataBase.CurrentUser != null)
            {
                localStorageService.SetAsync<Worker>("Authorization", dataBase.CurrentUser);
            }
            else
            {
                JS.InvokeVoidAsync("alert", "There is no such user in the database");
            }
        }
    }
}