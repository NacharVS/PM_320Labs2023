@using Data
@using Services
@using System.Text.RegularExpressions
@inject CurrentUser CurrentUser
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

<div class="card">
    <h4 class="card-header">Personal Page</h4>
    <div class="card-body">
        <hr>
            <label for="organisation"><b>Органзация</b></label><br />
            <input type="text" placeholder="@CurrentUser.CurrentDeveloper.DeveloperOrganisation" name="organisation" id="organisation" required @bind-value="@CurrentUser.CurrentDeveloper.DeveloperOrganisation" />
            <br/>
            <label for="middleName"><b>Фамилия</b></label><br />
            <input type="text" placeholder="@CurrentUser.CurrentDeveloper.MiddleName" name="middleName" id="middleName" required @bind-value="@CurrentUser.CurrentDeveloper.MiddleName" />
            <br/>
            <label for="firstName"><b>Имя</b></label><br />
            <input type="text" placeholder="@CurrentUser.CurrentDeveloper.FirstName" name="firstName" id="firstName" required @bind-value="@CurrentUser.CurrentDeveloper.FirstName" />
            <br/>
            <label for="lastName"><b>Отчество</b></label><br />
            <input type="text" placeholder="@CurrentUser.CurrentDeveloper.LastName" name="organisation" id="lastName" required @bind-value="@CurrentUser.CurrentDeveloper.LastName" />
            <br/>
            <label for="telephone"><b>Телефон</b></label><br />
            <input type="tel" maxlength="11" placeholder="@CurrentUser.CurrentDeveloper.Telephone" pattern="[8]{1}-([0-9]){3}-[0-9]{3}-[0-9]{2}-[0-9]{2}" name="telephone" id="telephone" required @bind-value="@telephone" />
            <br/>
            <label for="email"><b>Email</b></label><br />
            <input type="email" placeholder="@CurrentUser.CurrentDeveloper.Email" pattern=".+@globex\.com" name="email" id="email" required @bind-value="@CurrentUser.CurrentDeveloper.Email" />
            <br/>
            <label for="ogrn"><b>ОГРН</b></label><br />
            <input type="text" pattern="[0-9]{13}" maxlength="13" minlength="13" placeholder="@CurrentUser.CurrentDeveloper.OGRN" name="ogrn" id="ogrn" required @bind-value="@ogrn" />
            <br/>
            <label for="inn"><b>ИНН</b></label><br />
            <input type="text" pattern="[0-9]{10}" maxlength="10" minlength="10" placeholder="@CurrentUser.CurrentDeveloper.INN" name="inn" id="inn" required @bind-value="@inn" />
            <br/>
            <label for="kpp"><b>КПП</b></label><br />
            <input type="text" pattern="[0-9]{9}" maxlength="9" minlength="9" placeholder="@CurrentUser.CurrentDeveloper.KPP" name="kpp" id="kpp" required @bind-value="@kpp" />
            <br/>
            <label for="address"><b>Адрес</b></label><br />
            <input type="text" placeholder="@CurrentUser.CurrentDeveloper.Address" name="address" id="address" required @bind-value="@CurrentUser.CurrentDeveloper.Address" />
            <br/>
            <label for="leader"><b>Главный</b></label><br />
            <input type="text" placeholder="@CurrentUser.CurrentDeveloper.Leader" name="leader" id="leader" required @bind-value="@CurrentUser.CurrentDeveloper.Leader" />
            <br/>
        <hr>
        <button type="submit" class="registerbtn" @onclick="Save">Save</button>
        <button type="submit" class="registerbtn" @onclick="GoToProfile">Перейти в профиль</button>
    </div>
</div>


@code {
    List<string> globex = new List<string> () { "mail", "gmail" };
    string ogrn;
    string inn;
    string kpp;
    string telephone;

    public void GoToProj()
    {
        Navigation.NavigateTo("/mainproj");
    }

    public async void Save()
    {
        if (ogrn is not null && inn is not null && kpp is not null && telephone is not null)
        {
            if (Regex.IsMatch(ogrn, "^[0-9]+$") && Regex.IsMatch(inn, "^[0-9]+$") && Regex.IsMatch(kpp, "^[0-9]+$") && Regex.IsMatch(telephone, "^[0-9]+$") && CurrentUser.CurrentDeveloper.MiddleName is not null && CurrentUser.CurrentDeveloper.FirstName is not null && CurrentUser.CurrentDeveloper.DeveloperOrganisation is not null && ogrn is not null && inn is not null && kpp is not null && telephone is not null)
            {
                CurrentUser.CurrentDeveloper.OGRN = ogrn;
                CurrentUser.CurrentDeveloper.KPP = kpp;
                CurrentUser.CurrentDeveloper.INN = inn;
                CurrentUser.CurrentDeveloper.Telephone = telephone;

                DBConnection.ReplaceDeveloper(CurrentUser.CurrentDeveloper);
                await LocalStorage.SetAsync<Developer>("Autho", CurrentUser.CurrentDeveloper);
                StateHasChanged();
                Navigation.NavigateTo("/personalmain");
            }
        }
    }

    public void GoToProfile()
    {
        if (CurrentUser.CurrentDeveloper.MiddleName is not null && CurrentUser.CurrentDeveloper.FirstName is not null && CurrentUser.CurrentDeveloper.DeveloperOrganisation is not null && CurrentUser.CurrentDeveloper.OGRN is not null && CurrentUser.CurrentDeveloper.INN is not null && CurrentUser.CurrentDeveloper.KPP is not null && CurrentUser.CurrentDeveloper.Telephone is not null)
        {
            Navigation.NavigateTo("/personalmain");
        }
    }
}
