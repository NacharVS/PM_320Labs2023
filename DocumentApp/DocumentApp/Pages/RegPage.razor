@page "/RegPage"
@using DocumentApp.Models
@using DocumentApp.Interfaces
@using DocumentApp.Services
@using System.Text.RegularExpressions

@inject RoleService RoleService;
@inject UserService UserService;
@inject IJSRuntime JSR
@inject NavigationManager NavigationManager

<section class="vh-200 bg-image"
         style="background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');">
    <div class="mask d-flex align-items-center h-100 gradient-custom-3">
        <div class="container h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                    <div class="card" style="border-radius: 15px;">
                        <div class="card-body p-5">
                            <h2 class="text-uppercase text-center mb-5">Регистрация аккаунта</h2>

                            <form>

                                <div class="form-outline mb-4">
                                    <input type="text" class="form-control form-control-lg" @bind-value="@_login"/>
                                    <label class="form-label">Ваш логин</label>
                                </div>

                                <div class="form-outline mb-4">
                                    <input type="email" class="form-control form-control-lg" @bind-value="@_email"/>
                                    <label class="form-label">Ваш Email</label>
                                    @if (!CheckEmail())
                                    {
                                        <div class="alert alert-warning">Неверно введен Email</div>
                                    }
                                </div>
                                <div class="form-outline mb-4">
                                    <input type="text" class="form-control form-control-lg" @bind-value="@_phone"/>
                                    <label class="form-label">Ваш номер телефона</label>
                                    <label class="form-label col-form-label-sm">Пример: 89011111111</label>
                                    @if (!CheckPhone())
                                    {
                                        <div class="alert alert-warning">Неверно введен номер телефона</div>
                                    }
                                </div>

                                <div class="form-outline mb-4">
                                    <select class="form-select form-select-lg" @bind="@_roleName" @onblur="CreateUser">
                                        <option value=""></option>
                                        @foreach (var role in RoleService.GetAllRoles())
                                        {
                                            <option value="@role">@role</option>
                                        }
                                    </select>
                                    <label class="form-label">Роль</label>
                                    @switch (@_roleName)
                                    {
                                        case "Заказчик":
                                            <CustomerRegPage SendUser="x => user = x"/>
                                            break;
                                        case "Проектировщик":
                                            <DesignerRegPage SendUser="x => user = x"/>
                                            break;
                                        case "Застройщик":
                                            <BuilderRegPage SendUser="x => user = x"/>
                                            break;
                                    }
                                </div>

                                <div class="form-outline mb-4">
                                    <input type="password" class="form-control form-control-lg" @bind-value="@_password"/>
                                    <label class="form-label">Пароль</label>
                                </div>

                                <div class="form-outline mb-4">
                                    <input type="password" class="form-control form-control-lg" @bind-value="@_passwordRepeat"/>
                                    <label class="form-label">Повтор пароля</label>
                                    @if (!CheckPassword())
                                    {
                                        <div class="alert alert-warning">Введенные пароли не совпадают</div>
                                    }
                                </div>

                                <p class="text-center text-muted mt-5 mb-0">Уже есть аккаунт? <a href="/AuthPage"
                                                                                                 class="fw-bold text-body"><u>Авторизуйтесь</u></a></p>

                            </form>
                            
                            <div class="d-flex justify-content-center">
                                <button type="submit"
                                        class="btn btn-success btn-block btn-lg gradient-custom-4 text-body" @onclick="Register">Зарегистрироваться</button>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@code {
    private CustomerRegPage? _customerRegPage;
    private BuilderRegPage? _builderRegPage;
    private DesignerRegPage? _designerRegPage;
    User user = new();
    
    private string? _login = "";

    private string? _password = "";
    private string? _passwordRepeat = "";

    private string? _email = "";

    private string? _phone = "";

    private string? _roleName = "";

    private bool CheckPhone()
    {
        Regex r = new Regex(@"^[0-9]+$");
        return r.IsMatch(_phone) && _phone.Length == 11;
    }

    private bool CheckEmail()
    {
        string cond = @"(\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*)";
        return Regex.IsMatch(_email, cond);
    }

    private bool CheckPassword()
    {
        return _password == _passwordRepeat;
    }
    private bool CheckFields()
    {
        return _login != ""
               && _password != ""
               && _email != ""
               && _phone != ""
               && _roleName != ""
               && CheckPhone()
               && CheckEmail()
               && CheckPassword();
    }

    private void CreateUser()
    {
        switch (_roleName)
        {
            case "Заказчик":
                user = new Customer();
                break;
            case "Застройщик":
                user = new Builder();
                break;
            case "Проектировщик":
                user = new Designer();
                break;
        }
    }
    private async void Register()
    {
        if (UserService.CheckUserEx(_login))
        {
            await JSR.InvokeVoidAsync("alert", "Пользователь с таким именем существует!");
            return;
        }
        if (!CheckFields())
        {
            await JSR.InvokeVoidAsync("alert", "Не все поля заполнены!");
            return;
        }
        if (user is not null)
        {
            user.Login = _login;
            user.Password = _password;
            user.Email = _email;
            user.RoleId = RoleService.GetRoleByName(_roleName).Id;
            user.Phone = _phone;
            if (UserService.SaveUser(user))
            {
                NavigationManager.NavigateTo("/AuthPage");
            }
        }
    }
}