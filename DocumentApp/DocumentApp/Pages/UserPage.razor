@page "/UserPage"
@using DocumentApp.Models
@using DocumentApp.Services
@using Microsoft.AspNetCore.Components
@using ZstdSharp.Unsafe
@using DocumentApp.Interfaces
@using System.Text.RegularExpressions
@inject UserService UserService;
@inject RoleService RoleService;
@inject ILocalStorage LocalStorageService
@inject NavigationManager NavigationManager

<section class="vh-200 bg-image"
         style="background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');">
    <div class="mask d-flex align-items-center h-100 gradient-custom-3">
        <div class="container h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                    <div class="card" style="border-radius: 15px;">
                        <div class="card-body p-5">
                            <h2 class="text-uppercase text-center mb-5">Личный кабинет</h2>

                            <form>
                                <div class="form-outline mb-4">
                                    <input type="email" class="form-control form-control-lg" @bind-value="@_user.Email"/>
                                    <label class="form-label">Ваш Email</label>
                                    @if (!CheckEmail())
                                    {
                                        <div class="alert alert-warning">Неверно введен Email</div>
                                    }
                                </div>
                                <div class="form-outline mb-4">
                                    <input type="text" class="form-control form-control-lg" @bind-value="@_user.Phone"/>
                                    <label class="form-label">Ваш номер телефона</label>
                                    @if (!CheckPhone())
                                    {
                                        <div class="alert alert-warning">Неверно введен номер телефона</div>
                                    }
                                </div>

                                <div class="form-outline mb-4">
                                    <div><label class="form-label col-form-label-lg">@_roleName</label></div>
                                    <div><label class="form-label">Роль</label>
                                        @switch (_roleName)
                                        {
                                            case "Заказчик":
                                                <CustomerRegPage Customer="_user as Customer" SendUser="x => _user = x" IsCabinet="true"/>
                                                break;
                                            case "Проектировщик":
                                                <DesignerRegPage Designer="_user as Designer" SendUser="x => _user = x"/>
                                                break;
                                            case "Застройщик":
                                                <BuilderRegPage Builder="_user as Builder" SendUser="x => _user = x"/>
                                                break;
                                        }</div>
                                </div>
                                
                                <div class="d-flex justify-content-center mb-3">
                                    <button type="submit"
                                            class="btn btn-success btn-block btn-lg gradient-custom-4 text-body" @onclick="Save">Сохранить</button>
                                </div>
                            </form>
                            
                            <div class="d-flex justify-content-center">
                                <button type="submit"
                                        class="btn btn-success btn-block btn-lg gradient-custom-4 text-body" @onclick="LogOut">Выйти</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@code {
    private User _user;

    protected override void OnInitialized()
    {
        _user = UserService.CurrentUser;
        if (_user is not null)
        {
            _roleName = RoleService.GetRoleNameById(UserService.CurrentUser?.RoleId);
        }
    }

    private void Save()
    {
        if (CheckFields())
        {
            UserService.UpdateUser(_user, _user.Login);
        }
    }

    private bool CheckFields()
    {
        return (_user.Login != ""
                && _user.Password != ""
                && _user.Email != ""
                && _user.RoleId != ""
                && CheckPhone()
                && CheckEmail());
    }

    private bool CheckPhone()
    {
        if (_user is not null)
        {
            Regex r = new Regex(@"^[0-9]+$");
            return r.IsMatch(_user.Phone) && _user.Phone.Length == 11;
        }
        else
        {
            return false;
        }
    }

    private bool CheckEmail()
    {
        if (_user is not null)
        {
            string cond = @"(\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*)";
            return Regex.IsMatch(_user.Email, cond);
        }
        else
        {
            return false;
        }
    }

    private string? _roleName;

    private void LogOut()
    {
        UserService.CurrentUser = null;
        LocalStorageService.RemoveAsync("Authorization");
        NavigationManager.NavigateTo("/RegPage");
    }
}