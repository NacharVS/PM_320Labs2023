@page "/ProjectPage"
@using DocumentApp.Interfaces
@using DocumentApp.Models
@using DocumentApp.Services
<h3>Проект</h3>
@inject IDocumentService DocumentService
@inject UserService UserService
@inject ProjectService ProjectService
@inject RoleService RoleService

@if (ProjectService.CurrentProject is not null)
{
    <h3><strong>Название проекта:</strong> @ProjectService.CurrentProject.ProjectName</h3>
    <h3><strong>Дата создания:</strong> @ProjectService.CurrentProject.CreatedDate</h3>
    @if (ProjectService.CurrentProject.CustomerId is not null)
    {
        <h3><strong>Заказчик проекта:</strong> @((UserService.GetUserById(ProjectService.CurrentProject.CustomerId) as Customer)!.Surname)</h3>
    }
    @if (ProjectService.CurrentProject.DesignerId is not null)
    {
        <h3><strong>Проектировщик проекта:</strong> @((UserService.GetUserById(ProjectService.CurrentProject.DesignerId) as Designer)!.DesignerName)</h3>
    }
    @if (ProjectService.CurrentProject.BuilderId is not null)
    {
        <h3><strong>Застройщик проекта:</strong> @((UserService.GetUserById(ProjectService.CurrentProject.BuilderId) as Builder)!.BuilderName)</h3>
    }
    @switch (_role)
    {
        case "Заказчик":
            <CustomerProject></CustomerProject>
            break;
            
        case "Проектировщик":
            <DesignerProject IsCustomer="_isCustomer"></DesignerProject>
            break;
            
        case "Застройщик":
            <BuilderProject IsCustomer="_isCustomer"></BuilderProject>
            break;
        default:
            return;
    }
}

@code {
    private string? _role;
    private bool _isCustomer;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _role = RoleService.GetRoleNameById(UserService.CurrentUser.RoleId);
        if (_role == "Заказчик")
        {
            _isCustomer = true;
        }
    }

}