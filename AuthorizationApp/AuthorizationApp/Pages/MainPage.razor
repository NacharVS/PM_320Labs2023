@page "/MainPage"
@using AuthorizationApp.Services.Interfaces
@using IAuthorizationService = AuthorizationApp.Services.Interfaces.IAuthorizationService
@inject IAuthorizationService AuthorizationService;
@inject IImageService ImageService;

<h3>MainPage</h3>
<div class="page" style="display:flex;">
    <div>
        Logged users:
        @foreach (var loggedUser in AuthorizationService.GetLoggedUsers())
        {
            <p>Login: @loggedUser.Login Name: @loggedUser.Name @loggedUser.Surname</p>
        }
    </div>
    <div>
        Images:
        @if (_imagesInitialized)
        {
            <table>
                @foreach (var file in _images)
                {
                    var currentFile = file;
                    <tr>
                        <td>@file</td>
                        <td>
                            <a class="btn btn-primary" @onclick="() => _currentImageSelected = currentFile">Show</a>
                        </td>
                    </tr>
                }
            </table>
            <div class="card" style="width: 18rem;">
                <img src="images/@_currentImageSelected" class="card-img-top" alt="No such image found">
                <div class="card-body">
                    <a href="images/@_currentImageSelected" download="@_currentImageSelected" class="btn btn-primary">Download</a>
                </div>
            </div>
        }
    </div>
</div>

@code {

    private bool _imagesInitialized;
    private List<string> _images;
    private string _currentImageSelected;

    protected override async Task OnInitializedAsync()
    {
        await ImageService.InitializeImages();
        _images = (await ImageService.GetAllImages()).ToList();
        _imagesInitialized = true;
    }


}